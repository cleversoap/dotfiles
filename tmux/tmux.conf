# Force xterm
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set-window-option -g xterm-keys on

# Set a secondary prefix
set-option -g prefix C-a
set-option -g prefix2 C-b

# Always launch the shells in login mode - it may seem overkill however the
# env plugins that get loaded should always be available
set -g default-command "zsh --login"

# Enable mouse mode (note that mode-mouse is deprecated from v2.1)
setw -g mouse on

# Enable copy and paste that mimics Vim keybindings (aside from Shift+p)
# TODO: See if-shell for multi-config versions
set -sg escape-time 300
setw -g mode-keys vi
bind P paste-buffer
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi Y send-keys -X copy-line
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# Splits open in same working directory and new tmux windows open right
# after the current one - pane_current_path appears to fail on windows subsystem
bind '"' split-window -v -c '#{pane_current_path}'
bind '%' split-window -h -c '#{pane_current_path}'

# URXVT tab like switching
# So S-down will fail on windows subsystem linux (at least) if S-up is not
# also set
bind "t" new-window -c '#{pane_current_path}'
bind -n C-q prev
bind -n C-e next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1

# Correctly set window titles (even over ssh)
set -g set-titles on
set -g set-titles-string "#T"

# Status
set -g status-left '#{?client_prefix,#[bg=colour245 fg=colour233 bold],#[fg=colour155]} (#S)'
set -g status-position top

set -g @plugin 'tmux-plugins/tpm'

run $XDG_DATA_HOME/tmux/plugins/tpm/tpm
